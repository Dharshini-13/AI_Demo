name: IMDB Sentiment CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-train-push:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    steps:
      # ------------------------
      # Checkout repo
      # ------------------------
      - name: Checkout code
        uses: actions/checkout@v3

      # ------------------------
      # Setup Python
      # ------------------------
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # ------------------------
      # Install dependencies
      # ------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc[s3]  # change if using other storage type

      # ------------------------
      # Configure DVC remote (Dagshub)
      # ------------------------
      - name: Configure DVC remote
        run: |
          dvc remote modify dagshub --local auth basic
          dvc remote modify dagshub --local user Dharsh
          dvc remote modify dagshub --local password 4f3284cea30d20043975370eef81965d94e13fe1

      # ------------------------
      # Clean local DVC cache and outputs
      # ------------------------
      - name: Clean DVC cache and outputs
        run: |
          rm -rf .dvc/cache
          rm -rf data/processed/* || true
          rm -rf artifacts/* || true
          rm -rf models/* || true

      # ------------------------
      # Pull all DVC outputs fresh
      # ------------------------
      - name: Pull DVC outputs fresh
        run: dvc pull -r dagshub --force

      # ------------------------
      # Reproduce pipeline (retrain if needed)
      # ------------------------
      - name: Reproduce DVC pipeline
        run: dvc repro

      # ------------------------
      # Push updated DVC outputs to Dagshub
      # ------------------------
      - name: Push DVC outputs to Dagshub
        run: dvc push -r dagshub

      # ------------------------
      # Verify files are present safely
      # ------------------------
      - name: Verify outputs
        run: |
          echo "Data files:"
          if [ -d data/processed ]; then
            ls -l data/processed/
          else
            echo "No processed data folder"
          fi

          echo "Artifacts (metrics, vectorizer, model):"
          if [ -d artifacts ]; then
            ls -l artifacts/
          else
            echo "No artifacts folder"
          fi

          echo "Models:"
          if [ -d models ]; then
            ls -l models/
          else
            echo "No models folder"
          fi

      # ------------------------
      # Upload artifacts to GitHub Actions
      # ------------------------
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: imdb-sentiment-artifacts
          path: |
            artifacts/
            models/

      # ------------------------
      # Test API import
      # ------------------------
      - name: Test API import
        run: python -c "from src import app; print('App imported successfully')"
